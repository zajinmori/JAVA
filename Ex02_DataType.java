package com.test.java;

public class Ex02_DataType {
	//Ctrl + Space Bar (자동완성기능)
	public static void main(String[] args) {

		
		/*
		 
		 자바의 자료형, Data Type
		 - 데이터(자료)의 형태
		 - 데이터의 길이(범위)와 생김새를 미리 정의하고,
		   그 정의에 따라 분류해놓은 규칙
		 
		 - 100, 200, 300 > 정수
		 - 1.14, 5.21, 6.45 > 실수
		 - 홍길동, 아무개, 자바 > 문자
		 
		 자바의 자료형의 구분 기준
		 1. 형태
		 2. 길이
		 -----------------------------------------------
		  16GB
		 x1024
		 =16384MB
		 x1024
		 =16,777,216KB
		 x1024
		 =17,179,869,184B
		 x8
		 =137,438,953,472bit
		 
		 B(Byte) > 프로그래밍에서 데이터를 저장하는 기본 단위
		 
		 1B = 8bit
		 
		 bit > 물리적으로 데이터를 저장하는 기본 단위(한칸에 하나씩 1과0을저장)
		 ------------------------------------------------
		 
		 자료형의 종류
		 1. 기본형(원시형(Primitive Type), 값형(Value Type)) [기본레고블럭]
		 	a. 숫자형
		 		1. 정수형 (길이를 가지고 판단)
		 			a. byte (*메모리 1칸= 1byte *) = 8bit = -128 ~ 127 (0 때문에 양수에서 하나를 뺌)
		 			b. short (*메모리 2칸 = 2byte *) = 16bit = -32,768 ~ 32,767
		 			c. int (*메모리 4칸 = 4byte *)
		 			d. long (*메모리 8칸 = 8byte *)
		 			-> 메모리를 효율적으로 사용하기 위해 4가지로 구분
		 		2. 실수형(소수) ->범위가 엄청 넓다 (정밀도를 가지고 판단)
		 			a. float (4byte) = 32bit (유효소수이하자리 > 7자리 ex, 3.3333333..)
		 					-1bit > 부호
		 					-8bit > 지수 = 10^256
		 					-23bit > 가수
		 					->단정도형 (선택의 기준, 메모리를 아끼고 싶을 때)
		 			b. double (8byte) = 64bit (유효소수이하자리 > 15자리)
		 					-1bit > 부호
		 					-11bit > 지수 = 10^2,048
		 					-52bit > 가수
		 						지수부 = ^2,048
		 						가수부 = 소수
		 					->배정도형(정말 정확하게 표현할 때)

		 		
		 	b. 문자형 -> 정수로 표현함, 음수X
		 		1. 문자형
		 			a. char = 2byte = 16bit
		 				- 0 ~ 65535
		 		
		 	c. 논리형
		 		1. 논리형
		 			a. boolean = 1byte
		 				- 참(true), 거짓(false) (아무것도 없으면 거짓, 뭔가 있으면 참.)
		 
		 2. 참조형(Reference Type) [ 레고블럭으로 만든 무언가]
		 		1. String
		 
		 
		 
		 
		 
		
		 */
		
		
		
	}


}
